datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

generator client {
  provider = "prisma-client-js"
  output = "./prisma/generated/client"
}

model User {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  username    String   @unique
  email       String   @unique
  password    String?
  fullName    String?
  createdAt   DateTime @default(now())
  dateOfBirth DateTime?
  accounts    Account[]
  sessions    Session[]
  passwordResetTokens PasswordResetToken[]
  business    Boolean
}

model Admin {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  email String @unique
}

model PasswordResetToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  token     String   @unique
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model Account {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  userId            String   @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?  @db.String
  access_token      String?  @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?  @db.String
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Session {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId      String    @db.ObjectId
  expires     DateTime
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Pub {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  fullAddress  String
  longitude    Float   
  latitude     Float    
  phone        String
  email        String    @unique
  openingHours Json
  products     String[]
  functioning  Boolean
  googleRating Float
  href         String 
}